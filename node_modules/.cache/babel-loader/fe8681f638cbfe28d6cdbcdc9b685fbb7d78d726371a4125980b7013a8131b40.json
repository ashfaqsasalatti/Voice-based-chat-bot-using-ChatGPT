{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashfa\\\\OneDrive\\\\Desktop\\\\mallya\\\\mallya\\\\src\\\\Mallya.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Configuration, OpenAIApi } from \"openai\";\nimport './Mallya.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst configuration = new Configuration({\n  apiKey: \"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\"\n});\nfunction handleSpeakButtonClick(text) {\n  const synth = window.speechSynthesis;\n  const utterance = new SpeechSynthesisUtterance(text);\n  synth.speak(utterance);\n}\nasync function runCompletion(transcript, setMedi) {\n  try {\n    const openai = new OpenAIApi(configuration);\n    const completion = await openai.createCompletion({\n      model: \"text-davinci-003\",\n      prompt: transcript,\n      max_tokens: 300,\n      temperature: 1\n    });\n    const generatedText = completion.data.choices[0].text;\n    console.log(generatedText);\n    setMedi(generatedText);\n    handleSpeakButtonClick(generatedText);\n  } catch (error) {\n    console.error(error);\n  }\n}\nfunction Mallaya() {\n  _s();\n  const [transcript, setTranscript] = useState(\"\");\n  const [medi, setMedi] = useState(\"\");\n  const recognition = new window.webkitSpeechRecognition();\n  recognition.onresult = function (event) {\n    const last = event.results.length - 1;\n    const result = event.results[last][0].transcript;\n    setTranscript(result);\n    runCompletion(result, setMedi);\n  };\n  function startListening() {\n    recognition.start();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"mallya\",\n      style: {\n        backgroundColor: '#E1D9D1'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startListening,\n        style: {\n          backgroundColor: '#4CAF50',\n          border: 'none',\n          color: 'white',\n          padding: '15px 32px',\n          textAlign: 'center',\n          textDecoration: 'none',\n          display: 'inline-block',\n          fontSize: '16px',\n          margin: '4px 2px',\n          cursor: 'pointer',\n          borderRadius: '10px'\n        },\n        children: \"Start Listening\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: '#333',\n          fontSize: '18px',\n          marginTop: '20px'\n        },\n        children: [\" \", transcript]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: '10px 10px 10px 10px',\n          padding: '10px'\n        },\n        children: medi\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Mallaya, \"eRXgGG0bAzun02MTFP8CrZxfMoE=\");\n_c = Mallaya;\nexport default Mallaya;\nvar _c;\n$RefreshReg$(_c, \"Mallaya\");","map":{"version":3,"names":["React","useState","Configuration","OpenAIApi","jsxDEV","_jsxDEV","configuration","apiKey","handleSpeakButtonClick","text","synth","window","speechSynthesis","utterance","SpeechSynthesisUtterance","speak","runCompletion","transcript","setMedi","openai","completion","createCompletion","model","prompt","max_tokens","temperature","generatedText","data","choices","console","log","error","Mallaya","_s","setTranscript","medi","recognition","webkitSpeechRecognition","onresult","event","last","results","length","result","startListening","start","children","id","style","backgroundColor","onClick","border","color","padding","textAlign","textDecoration","display","fontSize","margin","cursor","borderRadius","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/ashfa/OneDrive/Desktop/mallya/mallya/src/Mallya.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Configuration, OpenAIApi } from \"openai\";\r\nimport './Mallya.css';\r\n\r\nconst configuration = new Configuration({\r\n  apiKey: \"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\",\r\n});\r\n\r\n\r\nfunction handleSpeakButtonClick(text) {\r\n  const synth = window.speechSynthesis;\r\n  const utterance = new SpeechSynthesisUtterance(text);\r\n  synth.speak(utterance);\r\n}\r\n\r\nasync function runCompletion(transcript, setMedi) {\r\n  \r\n  try {\r\n    const openai = new OpenAIApi(configuration);\r\n    const completion = await openai.createCompletion({\r\n      model: \"text-davinci-003\",\r\n      prompt: transcript,\r\n      max_tokens: 300,\r\n      temperature: 1,\r\n    });\r\n    const generatedText = completion.data.choices[0].text;\r\n    console.log(generatedText);\r\n    setMedi(generatedText)\r\n    handleSpeakButtonClick(generatedText);\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nfunction Mallaya() {\r\n  const [transcript, setTranscript] = useState(\"\");\r\n  const [medi , setMedi] = useState(\"\")\r\n\r\n  const recognition = new window.webkitSpeechRecognition();\r\n\r\n  recognition.onresult = function (event) {\r\n    const last = event.results.length - 1;\r\n    const result = event.results[last][0].transcript;\r\n    setTranscript(result);\r\n    runCompletion(result, setMedi);\r\n  };\r\n\r\n  function startListening() {\r\n    recognition.start();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"mallya\" style={{backgroundColor: '#E1D9D1'}}>\r\n      <button onClick={startListening} style={{backgroundColor: '#4CAF50', border: 'none', color: 'white', padding: '15px 32px', textAlign: 'center', textDecoration: 'none', display: 'inline-block', fontSize: '16px', margin: '4px 2px', cursor: 'pointer', borderRadius: '10px'}}>Start Listening</button>\r\n      <p style={{color: '#333', fontSize: '18px', marginTop: '20px'}}> {transcript}</p>\r\n      <p style={{margin : '10px 10px 10px 10px', padding: '10px'}}>{medi}</p>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Mallaya;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}